#+title: Tapis
#+author: Chahak Mehta
#+date: <2023-01-03 Tue>
#+property: header-args :session tapis :eval no-export :exports both :async yes

* =tapis-cli=

#+begin_quote
Tapis CLI is a human-friendly, scriptable command line interface, implemented in Python, that helps scientists and engineers build and manage scalable computational and data science workflow projects using the [[https://tacc-cloud.readthedocs.io/projects/agave/en/latest/][Tapis]] platform.
#+end_quote

#+begin_src shell
tapis --version
#+end_src

#+RESULTS:
: tapis 1.0.6

To initialize a host, run ~tapis auth init~

#+begin_src shell :results raw
tapis auth init
#+end_src

#+RESULTS:
+--------------------+---------------------------------+
| Field              | Value                           |
+--------------------+---------------------------------+
| tenant_id          | tacc.prod                       |
| username           | chahak                          |
| api_key            | zfSkhpVnZs_wLalschPFVd8W4tUa    |
| access_token       | db333daa6f7cfdbb3ac091d46499130 |
| expires_at         | Tue Jan  3 17:08:58 2023        |
| verify             | True                            |
| registry_url       | https://index.docker.io         |
| registry_username  | chahak                          |
| registry_password  | a*********U                     |
| registry_namespace | chahak                          |
+--------------------+---------------------------------+
* Setting up a neo4j pod
Ref: https://tapis.readthedocs.io/en/latest/technical/pods.html

- [X] Create TACC Account
  + Username: =chahak=
- [X] Create Docker
  + Username: =chahak=
- [X] Install Tapis Python SDK
  #+begin_src shell
pipenv install tapipy
  #+end_src
- [X] TACC OAuth
  - [X] Create Tapis Client Object
    #+begin_src jupyter-python
import os
from tapipy.tapis import Tapis

t = Tapis(base_url="https://icicle.tapis.io",
          username=os.getenv("TACC_USERNAME"),
          password=os.getenv("TACC_PASSWORD"))

t.get_tokens()
t.access_token.access_token
    #+end_src

    #+RESULTS:
    : eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9...

  - [X] Check Access to the Tapis API
    #+begin_src jupyter-python
t.authenticator.get_profile(username=os.getenv("TACC_USERNAME"))
    #+end_src

    #+RESULTS:
    :
    : create_time: None
    : dn: cn=chahak,ou=People,dc=tacc,dc=utexas,dc=edu
    : email: chahak@utexas.edu
    : given_name: Chahak
    : last_name: Mehta
    : mobile_phone: None
    : phone: None
    : uid: 875122
    : username: chahak

- [X] Registering a templated Pod
  To register a pod, we use the ~pods.create_pod()~ method.
  #+begin_src jupyter-python
t.pods.create_pod(pod_id="tuitustestpod", pod_template="neo4j", description="Creating test pod")
  #+end_src

  #+RESULTS:
  #+begin_example

  command: None
  creation_ts: 2023-01-06T15:34:20.551402
  data_attached: []
  data_requests: []
  description: Creating test pod
  environment_variables:

  networking:
  default:
  port: 7687
  protocol: tcp
  url: tuitustestpod.pods.icicle.tapis.io
  persistent_volume:

  pod_id: tuitustestpod
  pod_template: neo4j
  resources:
  cpu_limit: 2000
  cpu_request: 250
  mem_limit: 3072
  mem_request: 256
  roles_inherited: []
  roles_required: []
  start_instance_ts: None
  status: REQUESTED
  status_container:

  status_requested: ON
  time_to_stop_default: 43200
  time_to_stop_instance: None
  time_to_stop_ts: None
  update_ts: 2023-01-06T15:34:20.551422
  #+end_example


The details and status of this =REQUESTED= pod can be accessed using the ~get_pod()~ method.
#+begin_src jupyter-python
t.pods.get_pod(pod_id="tuitustestpod")
#+end_src

#+RESULTS:
#+begin_example

command: None
creation_ts: 2023-01-06T15:34:20.551402
data_attached: []
data_requests: []
description: Creating test pod
environment_variables:

networking:
default:
port: 7687
protocol: tcp
url: tuitustestpod.pods.icicle.tapis.io
persistent_volume:

pod_id: tuitustestpod
pod_template: neo4j
resources:
cpu_limit: 2000
cpu_request: 250
mem_limit: 3072
mem_request: 256
roles_inherited: []
roles_required: []
start_instance_ts: 2023-01-06T16:06:34.268462
status: RUNNING
status_container:
message: Pod is running.
phase: Running
start_time: 2023-01-06T16:06:17.000000
status_requested: ON
time_to_stop_default: 43200
time_to_stop_instance: None
time_to_stop_ts: 2023-01-07T04:06:34.270380
update_ts: 2023-01-06T15:34:20.551422
#+end_example

The logs can be retrieved using the ~get_pod_logs()~ method.
#+begin_src jupyter-python
t.pods.get_pod_logs(pod_id="tuitustestpod")
#+end_src

#+RESULTS:
#+begin_example

logs: 2023-01-06 16:06:39.132+0000 INFO  Starting...
2023-01-06 16:06:40.347+0000 INFO  This instance is ServerId{e6102ec8} (e6102ec8-c9a0-4650-b0df-b523b7475f5a)
2023-01-06 16:06:42.487+0000 INFO  ======== Neo4j 4.4.16 ========
2023-01-06 16:06:48.846+0000 INFO  [system/00000000] successfully initialized: CREATE USER podsservice IF NOT EXISTS SET PLAINTEXT PASSWORD 'servicepass' SET PASSWORD CHANGE NOT REQUIRED
2023-01-06 16:06:49.145+0000 INFO  [system/00000000] successfully initialized: CREATE USER tuitustestpod IF NOT EXISTS SET PLAINTEXT PASSWORD 'userpass' SET PASSWORD CHANGE NOT REQUIRED
2023-01-06 16:06:56.019+0000 INFO  Upgrading security graph to latest version
2023-01-06 16:06:56.020+0000 INFO  Setting version for 'security-users' to 2
2023-01-06 16:06:56.022+0000 INFO  Upgrading 'security-users' version property from 2 to 3
2023-01-06 16:06:56.283+0000 INFO  Called db.clearQueryCaches(): Query cache already empty.
2023-01-06 16:06:56.439+0000 INFO  Bolt enabled on [0:0:0:0:0:0:0:0%0]:7687.
2023-01-06 16:06:57.632+0000 INFO  Remote interface available at http://pods-tacc-icicle-tuitustestpod:7474/
2023-01-06 16:06:57.637+0000 INFO  id: 8ACF4A544C1C241897F7E92DEED8D4D2266674C622192A7F52378EF69EA3644A
2023-01-06 16:06:57.637+0000 INFO  name: system
2023-01-06 16:06:57.637+0000 INFO  creationDate: 2023-01-06T16:06:43.669Z
2023-01-06 16:06:57.637+0000 INFO  Started.
#+end_example

List of all pods - ~get_pods()~
#+begin_src jupyter-python :results raw drawer
print(t.pods.get_pods())
#+end_src

#+RESULTS:
:results:
#+begin_example
[
command: None
creation_ts: 2023-01-06T15:34:20.551402
data_attached: []
data_requests: []
description: Creating test pod
environment_variables: 

networking: 
default: 
port: 7687
protocol: tcp
url: tuitustestpod.pods.icicle.tapis.io
persistent_volume: 

pod_id: tuitustestpod
pod_template: neo4j
resources: 
cpu_limit: 2000
cpu_request: 250
mem_limit: 3072
mem_request: 256
roles_inherited: []
roles_required: []
start_instance_ts: 2023-01-06T16:06:34.268462
status: RUNNING
status_container: 
message: Pod is running.
phase: Running
start_time: 2023-01-06T16:06:17.000000
status_requested: ON
time_to_stop_default: 43200
time_to_stop_instance: None
time_to_stop_ts: 2023-01-07T04:06:34.270380
update_ts: 2023-01-06T15:34:20.551422]
#+end_example
:end:


Any pod can be deleted using the ~delete_pod(pod_id)~ method.
#+begin_src jupyter-python :results raw
t.pods.delete_pod(pod_id="tuitustestpod")
#+end_src

#+RESULTS:
| message | : | Pod successfully deleted. | metadata | : | nil | result | : |   | status | : | success | version | : | dev |
